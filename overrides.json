{
  "CREATE": {
    "/Name": "contract-test1",
    "/ArtifactS3Location": "s3://cw-syn-results-ACCOUNTID-us-west-2",
    "/ExecutionRoleArn": "arn:aws:iam::ACCOUNTID:role/SyntheticsLambdaExecutionRole",
    "/RuntimeVersion": "syn-nodejs-puppeteer-7.0",
    "/Code/Script": "var synthetics = require('Synthetics');\nconst log = require('SyntheticsLogger');\n\nconst pageLoadBlueprint = async function () {\n\n    // INSERT URL here\n    const URL = \"https://amazon.com\";\n\n    let page = await synthetics.getPage();\n    const response = await page.goto(URL, {waitUntil: 'domcontentloaded', timeout: 30000});\n    //Wait for page to render.\n    //Increase or decrease wait time based on endpoint being monitored.\n    await new Promise(r => setTimeout(r, 15000));\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    let pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n        throw \"Failed to load page!\";\n    }\n};\n\nexports.handler = async () => {\n    return await pageLoadBlueprint();\n};",
    "/Code/Handler": "pageLoadBlueprint.handler",
    "/Code/S3Key": null,
    "/Code/S3Bucket": null,
    "/Code/S3ObjectVersion": null,
    "/Schedule/Expression": "rate(1 minute)",
    "/Schedule/DurationInSeconds": 3600,
    "/FailureRetentionPeriod": 30,
    "/SuccessRetentionPeriod": 30,
    "/StartCanaryAfterCreation": false,
    "/RunConfig/TimeoutInSeconds": 60,
    "/RunConfig/MemoryInMB": null,
    "/RunConfig/ActiveTracing": null,
    "/RunConfig/EnvironmentVariables": null,
    "/VpcConfig": null,
    "/Tags": [
      {
        "Key": "key001",
        "Value": "value001"
      }
    ]
  }
}